{"version":3,"sources":["webpack://gatsby-personal-website-starter/./src/components/utils/FormatHtml/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/Timeline/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/Timeline/index.tsx","webpack://gatsby-personal-website-starter/./src/components/Experience/index.tsx","webpack://gatsby-personal-website-starter/./src/components/Education/index.tsx","webpack://gatsby-personal-website-starter/./src/pages/resume.tsx"],"names":["content","className","dangerouslySetInnerHTML","__html","Timeline","styled","Details","Content","Title","Subtitle","Date","Point","title","subtitle","startDate","endDate","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","experiences","edges","Container","section","TitleSection","map","item","node","id","html","company","position","key","FormatHtml","education","university","degree","Layout","SEO"],"mappings":"qKAeA,IAToC,SAAC,GAAD,IAAGA,EAAH,EAAGA,QAAH,OAClC,wBACEC,UAAU,cACVC,wBAAyB,CACvBC,OAAQH,O,qICPDI,EAAWC,oBAAH,wDAAGA,CAAH,2BACf,sLAGE,qBAIKC,EAAUD,oBAAH,uDAAGA,CAAH,SACd,iEAGOE,EAAUF,oBAAH,uDAAGA,CAAH,SACd,gGAGOG,EAAQH,oBAAH,qDAAGA,CAAH,SACZ,wCAGOI,EAAWJ,oBAAH,wDAAGA,CAAH,SACf,sBAGOK,EAAOL,oBAAH,oDAAGA,CAAH,2BACX,+HAIOM,EAAQN,qBAAH,qDAAGA,CAAH,4BACZ,gJCPN,EAdkC,SAAC,GAAD,IAAGO,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAUb,EAApB,EAAoBA,QAASc,EAA7B,EAA6BA,UAAWC,EAAxC,EAAwCA,QAAxC,OAChC,gBAAC,EAAD,KACE,gBAAC,EAAD,MACA,gBAAC,EAAD,KACE,gBAAC,EAAD,KACGD,EADH,MACiBC,GAEjB,gBAAC,EAAD,KAAeH,GACf,gBAAC,EAAD,KAAkBC,IAEpB,gBAAC,EAAD,KAAiBb,K,8BC2DrB,EA1D6B,WAC3B,OAA8CgB,oBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBA4BlBC,EAA6BF,EAAeG,YAC5CC,EAA4BH,EAAkBI,MAEpD,OACE,gBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,gBAACC,EAAA,EAAD,CAAcb,MAAOO,EAAaP,MAAOC,SAAUM,EAAaN,WAE/DQ,EAAYK,KAAI,SAACC,GAChB,MAIIA,EAAKC,KAHPC,EADF,EACEA,GACAC,EAFF,EAEEA,KAFF,IAGEV,YAAeW,EAHjB,EAGiBA,QAASC,EAH1B,EAG0BA,SAAUlB,EAHpC,EAGoCA,UAAWC,EAH/C,EAG+CA,QAG/C,OACE,gBAAC,EAAD,CACEkB,IAAKJ,EACLjB,MAAOmB,EACPlB,SAAUmB,EACVhC,QAAS,gBAACkC,EAAA,EAAD,CAAYlC,QAAS8B,IAC9BhB,UAAWA,EACXC,QAASA,SCQrB,EA1D4B,WAC1B,OAA8CC,oBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBA4BlBC,EAA6BF,EAAeG,YAC5Ce,EAAyBjB,EAAkBI,MAEjD,OACE,gBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,gBAACC,EAAA,EAAD,CAAcb,MAAOO,EAAaP,MAAOC,SAAUM,EAAaN,WAE/DsB,EAAUT,KAAI,SAACC,GACd,MAIIA,EAAKC,KAHPC,EADF,EACEA,GACAC,EAFF,EAEEA,KAFF,IAGEV,YAAegB,EAHjB,EAGiBA,WAAYC,EAH7B,EAG6BA,OAAQvB,EAHrC,EAGqCA,UAAWC,EAHhD,EAGgDA,QAGhD,OACE,gBAAC,EAAD,CACEkB,IAAKJ,EACLjB,MAAOwB,EACPvB,SAAUwB,EACVrC,QAAS,gBAACkC,EAAA,EAAD,CAAYlC,QAAS8B,IAC9BhB,UAAWA,EACXC,QAASA,SCtDrB,EAX6B,kBAC3B,gBAACuB,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAK3B,MAAM,WACX,gBAAC,EAAD,MACA,2BACA,gBAAC,EAAD,MACA","file":"component---src-pages-resume-tsx-e92cc6303342efbbd03f.js","sourcesContent":["import React, { ReactNode } from 'react';\n\ninterface Props {\n  content: any;\n}\n\nconst FormatHtml: React.FC<Props> = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nexport default FormatHtml;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Timeline = styled.div`\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\n\n  &:last-child {\n    ${tw`pb-0`};\n  }\n`;\n\nexport const Details = styled.div`\n  ${tw`w-full sm:w-1/3`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0`};\n`;\n\nexport const Title = styled.div`\n  ${tw`font-semibold mt-3`};\n`;\n\nexport const Subtitle = styled.div`\n  ${tw`text-xs`};\n`;\n\nexport const Date = styled.div`\n  ${tw`text-xs border  border-teal-400 rounded-full px-2`};\n  width: fit-content;\n`;\n\nexport const Point = styled.span`\n  ${tw`w-3 h-3 border border-indigo-200 bg-indigo-100 rounded-full absolute`};\n  left: -6px;\n  top: 20px;\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  content: React.ReactNode;\n  startDate: string;\n  endDate: string;\n}\n\nconst Timeline: React.FC<Props> = ({ title, subtitle, content, startDate, endDate }) => (\n  <Styled.Timeline>\n    <Styled.Point />\n    <Styled.Details>\n      <Styled.Date>\n        {startDate} - {endDate}\n      </Styled.Date>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\n    </Styled.Details>\n    <Styled.Content>{content}</Styled.Content>\n  </Styled.Timeline>\n);\n\nexport default Timeline;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Experience {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      company: string;\n      position: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Experience: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              company\n              position\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const experiences: Experience[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {experiences.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { company, position, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={company}\n            subtitle={position}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Education {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      university: string;\n      degree: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Education: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"education\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              university\n              degree\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const education: Education[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {education.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { university, degree, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={university}\n            subtitle={degree}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Education;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Experience from 'components/Experience';\nimport Education from 'components/Education';\nimport Skills from 'components/Skills';\n\nconst ResumePage: React.FC = () => (\n  <Layout>\n    <SEO title=\"Resume\" />\n    <Experience />\n    <hr />\n    <Education />\n    <hr />\n    {/* <Skills /> */}\n  </Layout>\n);\n\nexport default ResumePage;\n"],"sourceRoot":""}