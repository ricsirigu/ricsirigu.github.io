{"version":3,"sources":["webpack://gatsby-personal-website-starter/./src/components/utils/FormatHtml/index.tsx","webpack://gatsby-personal-website-starter/./src/templates/BlogPost/styles.ts","webpack://gatsby-personal-website-starter/./src/templates/BlogPost/index.tsx"],"names":["content","className","dangerouslySetInnerHTML","__html","Links","styled","data","pageContext","post","markdownRemark","previous","next","image","frontmatter","cover","childImageSharp","resize","Layout","SEO","title","description","excerpt","blogPost","Container","section","TitleSection","date","subtitle","isPostTitle","FormatHtml","html","to","fields","slug","rel"],"mappings":"qKAeA,IAToC,SAAC,GAAD,IAAGA,EAAH,EAAGA,QAAH,OAClC,wBACEC,UAAU,cACVC,wBAAyB,CACvBC,OAAQH,O,mKCCDI,GARQC,mBAAH,qDAAGA,CAAH,SACZ,wCAGeA,uBAAH,qDAAGA,CAAH,SACZ,+FAGeA,oBAAH,qDAAGA,CAAH,SACZ,kFC0EN,EAxCkC,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACnCC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KACZC,EAAQJ,EAAKK,YAAYC,MAC7BN,EAAKK,YAAYC,MAAMC,gBAAgBC,OACvC,KAGF,OACE,gBAACC,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CACEC,MAAOX,EAAKK,YAAYM,MACxBC,YAAaZ,EAAKK,YAAYO,aAAeZ,EAAKa,QAClDT,MAAOA,EACPU,SAAUd,IAEZ,gBAACe,EAAA,EAAD,CAAWC,SAAO,GAChB,gBAACC,EAAA,EAAD,CAAcN,MAAOX,EAAKK,YAAYa,KAAMC,SAAUnB,EAAKK,YAAYM,MAAOS,aAAa,IAC3F,gBAACC,EAAA,EAAD,CAAY7B,QAASQ,EAAKsB,OAC1B,gBAAC,EAAD,KACE,4BACGpB,GACC,gBAAC,KAAD,CAAMqB,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,YAApC,KACKxB,EAASG,YAAYM,QAI9B,4BACGR,GACC,gBAAC,KAAD,CAAMoB,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKE,YAAYM,MADpB","file":"component---src-templates-blog-post-index-tsx-b4a3ee834fece58656b1.js","sourcesContent":["import React, { ReactNode } from 'react';\n\ninterface Props {\n  content: any;\n}\n\nconst FormatHtml: React.FC<Props> = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nexport default FormatHtml;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full rounded-lg overflow-hidden mt-4 mb-10`};\n`;\n\nexport const Links = styled.div`\n  ${tw`w-full flex justify-between mt-10`};\n`;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Link from 'gatsby-link';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport * as Styled from './styles';\n\ninterface Post {\n  html: React.ReactNode;\n  excerpt: string;\n  fields: {\n    slug: string;\n  };\n  frontmatter: {\n    title: string;\n    description: string;\n    date: string;\n    tags: string[];\n    cover: {\n      childImageSharp: {\n        resize: {\n          src: string;\n          width: number;\n          height: number;\n        }\n      };\n    };\n  };\n}\n\ninterface Props {\n  data: {\n    markdownRemark: Post;\n  };\n  pageContext: {\n    slug: string;\n    next: Post;\n    previous: Post;\n  };\n}\n\nconst BlogPost: React.FC<Props> = ({ data, pageContext }) => {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n  const image = post.frontmatter.cover\n  ? post.frontmatter.cover.childImageSharp.resize\n  : null\n\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n        image={image}\n        blogPost={post}\n      />\n      <Container section>\n        <TitleSection title={post.frontmatter.date} subtitle={post.frontmatter.title} isPostTitle={true} />\n        <FormatHtml content={post.html} />\n        <Styled.Links>\n          <span>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"previous\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </span>\n          <span>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </span>\n        </Styled.Links>\n      </Container>\n    </Layout>\n  );\n};\n\nexport default BlogPost;\n\nexport const query = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id,\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        description\n        date(formatString: \"MMM DD, YYYY\")\n        tags\n        cover {\n          childImageSharp {\n            gatsbyImageData(layout: CONSTRAINED, width: 800)\n          }\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}