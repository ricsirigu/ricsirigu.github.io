{"version":3,"file":"component---src-pages-resume-tsx-bdd1988519b8e8d89c85.js","mappings":"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","sources":["webpack://gatsby-personal-website-starter/./src/components/utils/FormatHtml/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/Timeline/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/Timeline/index.tsx","webpack://gatsby-personal-website-starter/./src/components/Experience/index.tsx","webpack://gatsby-personal-website-starter/./src/components/Education/index.tsx","webpack://gatsby-personal-website-starter/./src/pages/resume.tsx"],"sourcesContent":["import React, { ReactNode } from 'react';\n\ninterface Props {\n  content: any;\n}\n\nconst FormatHtml: React.FC<Props> = ({ content }) => (\n  <span\n    className=\"format-html\"\n    dangerouslySetInnerHTML={{\n      __html: content\n    }}\n  />\n);\n\nexport default FormatHtml;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Timeline = styled.div`\n  ${tw`flex flex-col sm:flex-row w-full p-4 relative border-l border-indigo-200`};\n\n  &:last-child {\n    ${tw`pb-0`};\n  }\n`;\n\nexport const Details = styled.div`\n  ${tw`w-full sm:w-1/3`};\n`;\n\nexport const Content = styled.div`\n  ${tw`w-full sm:w-2/3 mt-4 sm:mt-0`};\n`;\n\nexport const Title = styled.div`\n  ${tw`font-semibold mt-3`};\n`;\n\nexport const Subtitle = styled.div`\n  ${tw`text-xs`};\n`;\n\nexport const Date = styled.div`\n  ${tw`text-xs border  border-teal-400 rounded-full px-2`};\n  width: fit-content;\n`;\n\nexport const Point = styled.span`\n  ${tw`w-3 h-3 border border-indigo-200 bg-indigo-100 rounded-full absolute`};\n  left: -6px;\n  top: 20px;\n`;\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle: string;\n  content: React.ReactNode;\n  startDate: string;\n  endDate: string;\n}\n\nconst Timeline: React.FC<Props> = ({ title, subtitle, content, startDate, endDate }) => (\n  <Styled.Timeline>\n    <Styled.Point />\n    <Styled.Details>\n      <Styled.Date>\n        {startDate} - {endDate}\n      </Styled.Date>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Subtitle>{subtitle}</Styled.Subtitle>\n    </Styled.Details>\n    <Styled.Content>{content}</Styled.Content>\n  </Styled.Timeline>\n);\n\nexport default Timeline;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Experience {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      company: string;\n      position: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Experience: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"experiences section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"experiences\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              company\n              position\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const experiences: Experience[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {experiences.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { company, position, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={company}\n            subtitle={position}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Experience;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Timeline from 'components/ui/Timeline';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport FormatHtml from 'components/utils/FormatHtml';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface Education {\n  node: {\n    id: string;\n    html: React.ReactNode;\n    frontmatter: {\n      university: string;\n      degree: string;\n      startDate: string;\n      endDate: string;\n    };\n  };\n}\n\nconst Education: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"education section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"education\" } } }\n        sort: { order: DESC, fields: fileAbsolutePath }\n      ) {\n        edges {\n          node {\n            id\n            html\n            frontmatter {\n              university\n              degree\n              startDate\n              endDate\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const education: Education[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} />\n\n      {education.map((item) => {\n        const {\n          id,\n          html,\n          frontmatter: { university, degree, startDate, endDate }\n        } = item.node;\n\n        return (\n          <Timeline\n            key={id}\n            title={university}\n            subtitle={degree}\n            content={<FormatHtml content={html} />}\n            startDate={startDate}\n            endDate={endDate}\n          />\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default Education;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Experience from 'components/Experience';\nimport Education from 'components/Education';\nimport Skills from 'components/Skills';\n\nconst ResumePage: React.FC = () => (\n  <Layout>\n    <SEO title=\"Resume\" />\n    <Experience />\n    <hr />\n    <Education />\n    <hr />\n    {/* <Skills /> */}\n  </Layout>\n);\n\nexport default ResumePage;\n"],"names":["_ref","content","React","className","dangerouslySetInnerHTML","__html","Timeline","styled","displayName","componentId","Details","Content","Title","Subtitle","Date","Point","title","subtitle","startDate","endDate","Styled","Experience","markdownRemark","allMarkdownRemark","useStaticQuery","sectionTitle","frontmatter","experiences","edges","Container","section","TitleSection","map","item","id","html","company","position","node","key","FormatHtml","Education","education","university","degree","ResumePage","Layout","SEO"],"sourceRoot":""}