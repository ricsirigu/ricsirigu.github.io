{"version":3,"sources":["webpack://gatsby-personal-website-starter/./src/components/ui/Icon/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/InfoBlock/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/InfoBlock/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ContactInfo/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ContactInfo/index.tsx","webpack://gatsby-personal-website-starter/./src/pages/contact.tsx"],"names":["library","faTwitter","faLinkedin","faGithub","faLaptopCode","faBug","faUserSecret","faUniversity","faMapMarkerAlt","faPhone","faPaperPlane","props","icon","includes","replace","InfoBlock","styled","center","Icon","Wrapper","Title","Content","title","content","ContactInfoItem","useStaticQuery","markdownRemark","allMarkdownRemark","sectionTitle","frontmatter","contacts","edges","Container","section","TitleSection","subtitle","map","item","node","id","key","Layout","SEO","ContactInfo"],"mappings":"6OAqBAA,SAAYC,MAAWC,MAAYC,MAAUC,MAAcC,MAAOC,MAAcC,MAAcC,MAAgBC,MAASC,OAIvH,IASA,EAT6C,SAAC,GAAkB,IAAbC,EAAY,oBAC7D,OAAGA,EAAMC,KAAKC,SAAS,SACd,gBAAC,IAAD,iBAAqBF,EAArB,CAA4BC,KAAM,CAAC,MAAOD,EAAMC,KAAKE,QAAQ,SAAU,QAGvE,gBAAC,IAAoBH,I,UCvBnBI,EAAYC,oBAAH,4DAAGA,CAAH,aAChB,6NACF,qBAAGC,QAAyB,yBAGnBC,EAAOF,qBAAH,uDAAGA,CAAH,SACX,iMAGOG,EAAUH,oBAAH,0DAAGA,CAAH,UAChB,qBAAGC,QAAyB,wBAGnBG,EAAQJ,mBAAH,wDAAGA,CAAH,SACZ,wCAGOK,EAAUL,kBAAH,0DAAGA,CAAH,SACd,uBCDN,EAZmC,SAAC,GAAD,IAAGJ,EAAH,EAAGA,KAAMU,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,QAASN,EAAzB,EAAyBA,OAAzB,OACjC,gBAAC,EAAD,CAAkBA,OAAQA,GACxB,gBAAC,EAAD,KACE,gBAAC,EAAD,CAAML,KAAMA,KAEd,gBAAC,EAAD,CAAgBK,OAAQA,GACtB,gBAAC,EAAD,KAAeK,GACf,gBAAC,EAAD,KAAiBC,O,yJChBVC,E,QAAkBR,kBAAH,mEAAGA,CAAH,SACtB,iECiEN,EA9C+B,WAC7B,OAA8CS,oBAAe,cAArDC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,kBAuBlBC,EAA6BF,EAAeG,YAC5CC,EAAsBH,EAAkBI,MAE9C,OACE,gBAACC,EAAA,EAAD,CAAWC,SAAO,GAChB,gBAACC,EAAA,EAAD,CAAcZ,MAAOM,EAAaN,MAAOa,SAAUP,EAAaO,SAAUlB,QAAM,IAC/Ea,EAASM,KAAI,SAACC,GACb,MAGIA,EAAKC,KAFPC,EADF,EACEA,GADF,IAEEV,YAAeP,EAFjB,EAEiBA,MAAOV,EAFxB,EAEwBA,KAAMW,EAF9B,EAE8BA,QAG9B,OACE,gBAAC,EAAD,CAAwBiB,IAAKD,GAC3B,gBAACxB,EAAA,EAAD,CAAWH,KAAMA,EAAMU,MAAOA,EAAOC,QAASA,EAASN,QAAM,UC9CzE,EAT8B,WAC5B,OACE,gBAACwB,EAAA,EAAD,KACE,gBAACC,EAAA,EAAD,CAAKpB,MAAM,YACX,gBAACqB,EAAD","file":"component---src-pages-contact-tsx-c69b07ff46b8f66fb6d0.js","sourcesContent":["import React from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\n//import { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faLaptopCode,\n  faBug,\n  faUserSecret,\n  faUniversity,\n  faMapMarkerAlt,\n  faPhone,\n  faPaperPlane\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faTwitter,\n  faLinkedin,\n  faGithub\n} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome';\n\n/* add any additional icon to the library */\nlibrary.add(faTwitter, faLinkedin, faGithub, faLaptopCode, faBug, faUserSecret, faUniversity, faMapMarkerAlt, faPhone, faPaperPlane);\n\nexport type IconProps = FontAwesomeIconProps['icon'];\n\nconst Icon: React.FC<FontAwesomeIconProps> = ({ ...props }) => {\n  if(props.icon.includes('brand')){\n    return <FontAwesomeIcon {...props} icon={['fab', props.icon.replace('brand-', '')]}/>\n  }\n  else {\n    return <FontAwesomeIcon {...props} />\n  }\n}\n\nexport default Icon;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport interface StyledProps {\n  center?: boolean;\n}\n\nexport const InfoBlock = styled.div<StyledProps>`\n  ${tw`flex flex-col my-4 mx-3 p-4 bg-white rounded-lg border border-gray-300`};\n  ${({ center }) => center && tw`items-center`};\n`;\n\nexport const Icon = styled.span`\n  ${tw`flex items-center justify-center w-10 h-10 text-indigo-500 border border-teal-400 rounded-full mb-2`};\n`;\n\nexport const Wrapper = styled.div<StyledProps>`\n  ${({ center }) => center && tw`text-center`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`text-md mt-1 font-semibold`};\n`;\n\nexport const Content = styled.p`\n  ${tw`mt-1`};\n`;\n","import React from 'react';\n\nimport Icon, { IconProps } from 'components/ui/Icon';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  title: string;\n  content: React.ReactNode;\n  icon: IconProps;\n}\n\nconst InfoBlock: React.FC<Props> = ({ icon, title, content, center }) => (\n  <Styled.InfoBlock center={center}>\n    <Styled.Icon>\n      <Icon icon={icon} />\n    </Styled.Icon>\n    <Styled.Wrapper center={center}>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Content>{content}</Styled.Content>\n    </Styled.Wrapper>\n  </Styled.InfoBlock>\n);\n\nexport default InfoBlock;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const ContactInfoItem = styled.div`\n  ${tw`w-full sm:w-1/3`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport { IconProps } from 'components/ui/Icon';\n\nimport { SectionTitle } from 'helpers/definitions';\n\nimport * as Styled from './styles';\n\ninterface Contact {\n  node: {\n    id: string;\n    frontmatter: {\n      title: string;\n      content: string;\n      icon: IconProps;\n    };\n  };\n}\n\nconst ConctactInfo: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"contact section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"contact\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              content\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const contacts: Contact[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      {contacts.map((item) => {\n        const {\n          id,\n          frontmatter: { title, icon, content }\n        } = item.node;\n\n        return (\n          <Styled.ContactInfoItem key={id}>\n            <InfoBlock icon={icon} title={title} content={content} center />\n          </Styled.ContactInfoItem>\n        );\n      })}\n    </Container>\n  );\n};\n\nexport default ConctactInfo;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport ContactInfo from 'components/ContactInfo';\n\nconst ContactPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Contact\" />\n      <ContactInfo />\n    </Layout>\n  );\n};\n\nexport default ContactPage;\n"],"sourceRoot":""}