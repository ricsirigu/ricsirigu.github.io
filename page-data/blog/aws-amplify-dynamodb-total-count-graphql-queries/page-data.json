{"componentChunkName":"component---src-templates-blog-post-index-tsx","path":"/blog/aws-amplify-dynamodb-total-count-graphql-queries/","result":{"data":{"markdownRemark":{"id":"65ee4a5e-1b95-59a4-947d-d85fdafeb443","excerpt":"How to get the total count of results with DynamoDB and GraphQL in order to paginate my results? Many engineers using AWS Amplify are facing the same issue. If…","html":"<article class=\"prose lg:prose-lg xl:prose-xl\">\n<p>How to get the total count of results with DynamoDB and GraphQL in order to paginate my results?</p>\n<p>Many engineers using <a href=\"https://aws.amazon.com/it/amplify/\" target=\"_blank\" rel=\"noopener noreferrer\">AWS Amplify</a> are <a href=\"https://github.com/aws-amplify/amplify-js/issues/2901\" target=\"_blank\" rel=\"noopener noreferrer\">facing</a> the <a href=\"https://stackoverflow.com/questions/55537058/get-count-from-dynamodb-resolver\" target=\"_blank\" rel=\"noopener noreferrer\">same</a> <a href=\"https://github.com/aws-amplify/amplify-cli/issues/1865\" target=\"_blank\" rel=\"noopener noreferrer\">issue</a>.</p>\n<p>If you are about to bang your head against the wall, stop. </p>\n<p>I'll show you how to do it.</p>\n<p>From the <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Query.html#Query.Count\" target=\"_blank\" rel=\"noopener noreferrer\">DynamoDB documentation</a>:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">the Query response contains the following elements:\n\nScannedCount — The number of items that matched the key condition expression before a filter expression (if present) was applied.\n\nCount — The number of items that remain after a filter expression (if present) was applied.</code></pre></div>\n<p>The problem is that the automatically generated queries from Amplify don't have those fields.</p>\n<p>This is an example of a query that lists users:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> listUsers <span class=\"token operator\">=</span> <span class=\"token comment\">/* GraphQL */</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\n  query ListUsers(\n    $filter: ModelAlertFilterInput\n    $limit: Int\n    $nextToken: String\n  ) {\n    listUsers(filter: $filter, limit: $limit, nextToken: $nextToken) {\n      items {\n        id\n        status\n        groupCanAccess\n        owner\n        ...\n      }\n      nextToken\n    }\n  }\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>And so, there will be no <code class=\"language-text\">scannedCount</code> and <code class=\"language-text\">count</code> in the result.</p>\n<p>To make them magically appear, open your <code class=\"language-text\">amplify/backend/api/&lt;project-name&gt;/build/schema.graphql</code> </p>\n<p>and look for the definition of the <code class=\"language-text\">type Query</code>.</p>\n<p>You'll find something like this </p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">Query</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">getUser</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">id</span><span class=\"token punctuation\">:</span> ID<span class=\"token operator\">!</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> User\n  <span class=\"token attr-name\">listUsers</span><span class=\"token punctuation\">(</span><span class=\"token attr-name\">filter</span><span class=\"token punctuation\">:</span> ModelUserFilterInput<span class=\"token punctuation\">,</span> <span class=\"token attr-name\">limit</span><span class=\"token punctuation\">:</span> Int<span class=\"token punctuation\">,</span> <span class=\"token attr-name\">nextToken</span><span class=\"token punctuation\">:</span> String<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> ModelUserConnection\n  <span class=\"token operator\">...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>a <code class=\"language-text\">listUsers</code> field that returns a type of <code class=\"language-text\">ModelUserConnection</code>, that is the result type that we want to edit.</p>\n<p>Copy the type <code class=\"language-text\">ModelUserConnection</code> in your <code class=\"language-text\">amplify/backend/api/&lt;project-name&gt;/schema.graphql</code> to override it.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">ModelUserConnection</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">items</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nextToken</span><span class=\"token punctuation\">:</span> String\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Add the <code class=\"language-text\">scannedCount</code> and <code class=\"language-text\">count</code> fields.</p>\n<div class=\"gatsby-highlight\" data-language=\"graphql\"><pre class=\"language-graphql\"><code class=\"language-graphql\"><span class=\"token keyword\">type</span> <span class=\"token class-name\">ModelUserConnection</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token attr-name\">items</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>User<span class=\"token punctuation\">]</span>\n  <span class=\"token attr-name\">nextToken</span><span class=\"token punctuation\">:</span> String\n  <span class=\"token attr-name\">scannedCount</span><span class=\"token punctuation\">:</span> Int\n  <span class=\"token attr-name\">count</span><span class=\"token punctuation\">:</span> Int\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now type <code class=\"language-text\">amplify push</code> and enjoy. </p>\n<p>Now the query will return the scannedCount and count and you can happily paginate your results.</p>\n<p>Remember that if the size of the Query result set is larger than 1 MB, <code class=\"language-text\">scannedCount</code> and <code class=\"language-text\">count</code> represent only a partial count of the total items. You need to perform multiple Query operations to retrieve all the results.</p>\n<p>Keep Learning<br>\nUntil next time <img alt=\"emoji-sunglasses\" data-icon=\"emoji-sunglasses\" style=\"display: inline; margin: 0; margin-top: 1px; top: 5px; width: 25px\" src=\"data:image/png;base64, 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\" title=\"emoji-sunglasses\"></p>\n</article>","frontmatter":{"title":"How to count the number of results with AWS Amplify DynamoDB and GraphQL","description":"Ho to paginate the results with DynamoDB?","date":"Dec 10, 2019","tags":["aws","dynamodb","graphql","amplify"],"cover":{"childImageSharp":{"resize":{"src":"/static/58e39f7215ff5277a5b171d454c9cfc6/0ff54/cover.jpg","width":1200,"height":675}}}},"fields":{"slug":"/blog/aws-amplify-dynamodb-total-count-graphql-queries/"}}},"pageContext":{"slug":"/blog/aws-amplify-dynamodb-total-count-graphql-queries/","previous":{"fields":{"slug":"/blog/how-to-connect-multiple-docker-containers/"},"frontmatter":{"title":"Quick recipe: How to connect multiple Docker containers"}},"next":{"fields":{"slug":"/blog/how-to-write-secure-code/"},"frontmatter":{"title":"How to write secure code"}}}},"staticQueryHashes":["3614791461","3649515864","567514351"]}