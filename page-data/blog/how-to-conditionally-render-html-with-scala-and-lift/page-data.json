{
    "componentChunkName": "component---src-templates-blog-post-index-tsx",
    "path": "/blog/how-to-conditionally-render-html-with-scala-and-lift/",
    "result": {"data":{"markdownRemark":{"id":"a0572a18-d2af-52ef-a988-c3f701dacc34","excerpt":"You have a piece of HTML like the following and you want to hide the entire container if some condition is true. Otherwise you want to display something insideâ€¦","html":"<article class=\"prose lg:prose-lg xl:prose-lg\">\n<p>You have a piece of HTML like the following</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token doctype\"><span class=\"token punctuation\">&lt;!</span><span class=\"token doctype-tag\">DOCTYPE</span> <span class=\"token name\">html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>html</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>head</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>meta</span> <span class=\"token attr-name\">charset</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span>utf-8</span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>title</span><span class=\"token punctuation\">></span></span>Your Snippet<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>title</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>head</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>body</span> <span class=\"token attr-name\">data-lift</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>ConditionalRendering<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>content-container<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>subtitle<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Inclusions<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>info<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>ul</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inclusions<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n        <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>li</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inclusions-text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Guided tour<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>li</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>ul</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>body</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>html</span><span class=\"token punctuation\">></span></span>\n </code></pre></div>\n<p>and you want to hide the entire container if some condition is true.<br>\nOtherwise you want to display something inside the container.<br>\nMaybe populating an unordered list.</p>\n<div class=\"gatsby-highlight\" data-language=\"scala\"><pre class=\"language-scala\"><code class=\"language-scala\"><span class=\"token keyword\">class</span> ConditionalRendering<span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">def</span> render<span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span>NodeSeq<span class=\"token punctuation\">)</span> <span class=\"token keyword\">=></span> NodeSeq <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string\">\"#content-container\"</span> #<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>trueness<span class=\"token punctuation\">)</span> PassThru <span class=\"token keyword\">else</span> ClearNodes<span class=\"token punctuation\">}</span> andThen\n    <span class=\"token string\">\"#inclusions\"</span> #<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span><span class=\"token string\">\".inclusions-text *\"</span> #<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span> List<span class=\"token punctuation\">(</span><span class=\"token string\">\"food\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"drinks\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>                     \n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n </code></pre></div>\n<p>The key part is <strong>andThen</strong> because if you use the <strong>&#x26;</strong> chaining method, the CSS selectors are applied to the\noriginal template, no matter what other selectors you are using.<br>\nIn contrast, with <strong>andThen</strong> you are composing two functions with the first being executed before the second.</p>\n<p>Keep Learning.<br>\nUntil next time <img alt=\"emoji-sunglasses\" data-icon=\"emoji-sunglasses\" style=\"display: inline; margin: 0; margin-top: 1px; top: 5px; width: 25px\" src=\"data:image/png;base64, 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\" title=\"emoji-sunglasses\"></p>\n</article>","frontmatter":{"title":"How to conditionally render HTML with Scala and the Lift Framework","description":"Learn how to render HTML conditionally with Scala and Lift","date":"Feb 01, 2017","tags":["scala","lift framework"],"cover":{"childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#080808","images":{"fallback":{"src":"/static/5d063f7d1d4a55729076affc69c18e43/1e21a/cover.jpg","srcSet":"/static/5d063f7d1d4a55729076affc69c18e43/1bf32/cover.jpg 200w,\n/static/5d063f7d1d4a55729076affc69c18e43/eee8e/cover.jpg 400w,\n/static/5d063f7d1d4a55729076affc69c18e43/1e21a/cover.jpg 800w","sizes":"(min-width: 800px) 800px, 100vw"},"sources":[{"srcSet":"/static/5d063f7d1d4a55729076affc69c18e43/b6124/cover.webp 200w,\n/static/5d063f7d1d4a55729076affc69c18e43/dff21/cover.webp 400w,\n/static/5d063f7d1d4a55729076affc69c18e43/b2a35/cover.webp 800w","type":"image/webp","sizes":"(min-width: 800px) 800px, 100vw"}]},"width":800,"height":450}}}},"fields":{"slug":"/blog/how-to-conditionally-render-html-with-scala-and-lift/"}}},"pageContext":{"slug":"/blog/how-to-conditionally-render-html-with-scala-and-lift/","previous":{"fields":{"slug":"/blog/isomorphic-web-applications-with-scala-and-scalajs/"},"frontmatter":{"title":"Isomorphic Web Applications with Scala and ScalaJs"}},"next":{"fields":{"slug":"/blog/building-secure-software-with-a-card-game/"},"frontmatter":{"title":"Building Secure Software With a Card Game"}}}},
    "staticQueryHashes": ["279501559","3159585216","3649515864"]}