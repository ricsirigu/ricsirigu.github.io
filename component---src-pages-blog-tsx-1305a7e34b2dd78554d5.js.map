{"version":3,"file":"component---src-pages-blog-tsx-1305a7e34b2dd78554d5.js","mappings":"2SAGO,MAAMA,EAAQC,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,gBAAAC,YAAA,gBAAVF,CAAU,SACzB,+CAGOG,EAAOH,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,eAAAC,YAAA,gBAAVF,CAAU,SACxB,4EAGOI,EAAOJ,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,eAAAC,YAAA,gBAAVF,CAAU,SACxB,oJAGOK,EAAUL,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,kBAAAC,YAAA,gBAAVF,CAAU,SAC3B,kCAGOM,EAAQN,EAAAA,QAAAA,OAAAA,WAAa,CAAAC,YAAA,gBAAAC,YAAA,gBAAbF,CAAa,SAC5B,gBAGOO,EAAQP,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAA,gBAAAC,YAAA,gBAATF,CAAS,SACxB,wCAGOQ,EAAcR,EAAAA,QAAAA,EAAAA,WAAQ,CAAAC,YAAA,sBAAAC,YAAA,gBAARF,CAAQ,MAEtBS,EAAOT,EAAAA,QAAAA,GAAAA,WAAS,CAAAC,YAAA,eAAAC,YAAA,gBAATF,CAAS,SACvB,sCAGOU,EAAOV,EAAAA,QAAAA,IAAAA,WAAU,CAAAC,YAAA,eAAAC,YAAA,gBAAVF,CAAU,QACxB,uDAGOW,EAAMX,EAAAA,QAAAA,KAAAA,WAAW,CAAAC,YAAA,cAAAC,YAAA,gBAAXF,CAAW,QACxB,iNC2EN,MAhFwBD,KACtB,MAAM,eAAEa,EAAc,kBAAEC,IAAsBC,EAAAA,EAAAA,gBAAe,aAoCvDC,EAA6BH,EAAeI,YAC5CC,EAAgBJ,EAAkBK,MAExC,OACEC,EAAAA,cAACC,EAAAA,EAAS,CAACC,SAAO,GAChBF,EAAAA,cAACG,EAAAA,EAAY,CAACC,MAAOR,EAAaQ,MAAOC,SAAUT,EAAaS,SAAUC,QAAM,IAChFN,EAAAA,cAACO,EAAY,KACVT,EAAMU,KAAKC,IACV,MAAM,GACJC,EACAC,QAAQ,KAAEC,GACVf,aAAa,MAAEO,EAAK,MAAES,EAAK,YAAEC,EAAW,KAAEC,EAAI,KAAEC,IAC9CP,EAAKQ,KAET,OACEjB,EAAAA,cAACO,EAAW,CAACW,IAAKR,GAChBV,EAAAA,cAACmB,EAAAA,GAAI,CAACC,GAAIR,GACRZ,EAAAA,cAACqB,EAAAA,EAAAA,IAAU,CAACC,WAAY,CAAEC,MAAO,MAAQC,SAAU,CAAED,MAAO,IAC1DvB,EAAAA,cAACO,EAAW,KACVP,EAAAA,cAACO,EAAY,KACXP,EAAAA,cAACyB,EAAAA,EAAW,CAACC,MAAOb,EAAMc,gBAAgBC,gBAAiBC,IAAKzB,KAElEJ,EAAAA,cAACO,EAAc,KACbP,EAAAA,cAACO,EAAW,KAAEQ,GACdf,EAAAA,cAACO,EAAY,KAAEH,GACfJ,EAAAA,cAACO,EAAkB,KAAEO,IAEvBd,EAAAA,cAACO,EAAW,KACTS,EAAKR,KAAKC,GACTT,EAAAA,cAACO,EAAU,CAACW,IAAKT,GAAOA,SAMtB,KAIV,EC9FhB,MAT2BqB,IAEvB9B,EAAAA,cAAC+B,EAAAA,EAAM,KACL/B,EAAAA,cAACgC,EAAAA,EAAG,CAAC5B,MAAM,SACXJ,EAAAA,cAACpB,EAAK,M","sources":["webpack://gatsby-personal-website-starter/./src/components/Posts/styles.tsx","webpack://gatsby-personal-website-starter/./src/components/Posts/index.tsx","webpack://gatsby-personal-website-starter/./src/pages/blog.tsx"],"sourcesContent":["import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Posts = styled.div`\n  ${tw`w-full flex flex-wrap`};\n`;\n\nexport const Post = styled.div`\n  ${tw`w-full sm:w-1/2 p-3`};\n`;\n\nexport const Card = styled.div`\n  ${tw`w-full h-full rounded-lg flex flex-col overflow-hidden border border-gray-300`};\n`;\n\nexport const Content = styled.div`\n  ${tw`p-4 text-indigo-900`};\n`;\n\nexport const Image = styled.figure`\n  ${tw`w-full`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`font-semibold mb-4`};\n`;\n\nexport const Description = styled.p``;\n\nexport const Date = styled.h3`\n  ${tw`text-xs text-indigo-500`};\n`;\n\nexport const Tags = styled.div`\n  ${tw`p-4 pt-2 mt-auto`}\n`;\n\nexport const Tag = styled.span`\n  ${tw`text-xs text-indigo-900 border border-teal-400 rounded-full px-2 py-1 mr-2`}\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from \"gatsby-plugin-image\"\nimport Link from 'gatsby-link';\nimport { motion } from 'framer-motion';\n\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport { SectionTitle, ImageSharpFluid } from 'helpers/definitions';\n\nimport * as Styled from './styles';\n\ninterface Post {\n  node: {\n    id: string;\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      title: string;\n      description: string;\n      date: string;\n      tags: string[];\n      cover: {\n        childImageSharp: {\n          gatsbyImageData: ImageSharpFluid;\n        };\n      };\n    };\n  };\n}\n\nconst Posts: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"blog section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(\n        filter: { frontmatter: { category: { eq: \"blog\" }, published: { eq: true } } }\n        sort: { fields: frontmatter___date, order: DESC }\n      ) {\n        edges {\n          node {\n            id\n            html\n            fields {\n              slug\n            }\n            frontmatter {\n              title\n              description\n              date(formatString: \"MMM DD, YYYY\")\n              tags\n              cover {\n                childImageSharp {\n                  gatsbyImageData(layout: CONSTRAINED, width: 800)\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const posts: Post[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Posts>\n        {posts.map((item) => {\n          const {\n            id,\n            fields: { slug },\n            frontmatter: { title, cover, description, date, tags }\n          } = item.node;\n\n          return (\n            <Styled.Post key={id}>\n              <Link to={slug}>\n                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 1 }}>\n                  <Styled.Card>\n                    <Styled.Image>\n                      <GatsbyImage image={cover.childImageSharp.gatsbyImageData} alt={title} />\n                    </Styled.Image>\n                    <Styled.Content>\n                      <Styled.Date>{date}</Styled.Date>\n                      <Styled.Title>{title}</Styled.Title>\n                      <Styled.Description>{description}</Styled.Description>\n                    </Styled.Content>\n                    <Styled.Tags>\n                      {tags.map((item) => (\n                        <Styled.Tag key={item}>{item}</Styled.Tag>\n                      ))}\n                    </Styled.Tags>\n                  </Styled.Card>\n                </motion.div>\n              </Link>\n            </Styled.Post>\n          );\n        })}\n      </Styled.Posts>\n    </Container>\n  );\n};\n\nexport default Posts;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport Posts from 'components/Posts';\n\nconst BlogPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"Blog\" />\n      <Posts />\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n"],"names":["Posts","styled","displayName","componentId","Post","Card","Content","Image","Title","Description","Date","Tags","Tag","markdownRemark","allMarkdownRemark","useStaticQuery","sectionTitle","frontmatter","posts","edges","React","Container","section","TitleSection","title","subtitle","center","Styled","map","item","id","fields","slug","cover","description","date","tags","node","key","Link","to","motion","whileHover","scale","whileTap","GatsbyImage","image","childImageSharp","gatsbyImageData","alt","BlogPage","Layout","SEO"],"sourceRoot":""}