{"version":3,"sources":["webpack://gatsby-personal-website-starter/./src/components/ui/Icon/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/InfoBlock/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/InfoBlock/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/Button/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/Button/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/Banner/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/Banner/index.tsx","webpack://gatsby-personal-website-starter/./src/components/HeroBanner/index.tsx","webpack://gatsby-personal-website-starter/./src/components/Services/styles.ts","webpack://gatsby-personal-website-starter/./src/components/Services/index.tsx","webpack://gatsby-personal-website-starter/./src/pages/index.tsx"],"names":["library","faTwitter","faLinkedin","faGithub","faLaptopCode","faBug","faUserSecret","faUniversity","faMapMarkerAlt","faPhone","faPaperPlane","props","icon","includes","replace","InfoBlock","styled","center","Icon","Wrapper","Title","Content","title","content","Button","motion","primary","block","children","name","aria-label","whileHover","scale","whileTap","Banner","subtitle","linkTo","linkText","Container","section","TitleSection","Link","to","heroBanner","useStaticQuery","markdownRemark","frontmatter","Services","ServiceItem","allMarkdownRemark","sectionTitle","services","edges","map","item","node","id","description","key","Layout","SEO"],"mappings":"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","file":"component---src-pages-index-tsx-258b1f716512e2dcc17c.js","sourcesContent":["import React from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\n//import { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faLaptopCode,\n  faBug,\n  faUserSecret,\n  faUniversity,\n  faMapMarkerAlt,\n  faPhone,\n  faPaperPlane\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faTwitter,\n  faLinkedin,\n  faGithub\n} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome';\n\n/* add any additional icon to the library */\nlibrary.add(faTwitter, faLinkedin, faGithub, faLaptopCode, faBug, faUserSecret, faUniversity, faMapMarkerAlt, faPhone, faPaperPlane);\n\nexport type IconProps = FontAwesomeIconProps['icon'];\n\nconst Icon: React.FC<FontAwesomeIconProps> = ({ ...props }) => {\n  if(props.icon.includes('brand')){\n    return <FontAwesomeIcon {...props} icon={['fab', props.icon.replace('brand-', '')]}/>\n  }\n  else {\n    return <FontAwesomeIcon {...props} />\n  }\n}\n\nexport default Icon;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport interface StyledProps {\n  center?: boolean;\n}\n\nexport const InfoBlock = styled.div<StyledProps>`\n  ${tw`flex flex-col my-4 mx-3 p-4 bg-white rounded-lg border border-gray-300`};\n  ${({ center }) => center && tw`items-center`};\n`;\n\nexport const Icon = styled.span`\n  ${tw`flex items-center justify-center w-10 h-10 text-indigo-500 border border-teal-400 rounded-full mb-2`};\n`;\n\nexport const Wrapper = styled.div<StyledProps>`\n  ${({ center }) => center && tw`text-center`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`text-md mt-1 font-semibold`};\n`;\n\nexport const Content = styled.p`\n  ${tw`mt-1`};\n`;\n","import React from 'react';\n\nimport Icon, { IconProps } from 'components/ui/Icon';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  title: string;\n  content: React.ReactNode;\n  icon: IconProps;\n}\n\nconst InfoBlock: React.FC<Props> = ({ icon, title, content, center }) => (\n  <Styled.InfoBlock center={center}>\n    <Styled.Icon>\n      <Icon icon={icon} />\n    </Styled.Icon>\n    <Styled.Wrapper center={center}>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Content>{content}</Styled.Content>\n    </Styled.Wrapper>\n  </Styled.InfoBlock>\n);\n\nexport default InfoBlock;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\nimport { motion } from 'framer-motion';\n\nexport interface StyledProps {\n  primary?: boolean;\n  block?: boolean;\n}\n\nexport const Button = motion(styled.button<StyledProps>`\n  outline: none !important;\n  ${tw`py-2 px-8 rounded-full border border-teal-300 text-indigo-900`};\n\n  ${({ primary }) => (primary ? tw`bg-teal-300` : tw`text-indigo-600`)};\n\n  ${({ block }) => block && tw`w-full`};\n`);\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  children: React.ReactNode;\n}\n\nconst Button: React.FC<Props & React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ primary, block, children, name }) => (\n  <Styled.Button aria-label={name} primary={primary} block={block} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n    {children}\n  </Styled.Button>\n);\n\nexport default Button;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Banner = styled.section`\n  ${tw`bg-gray-100 border-b border-indigo-100 `};\n`;\n\nexport const Content = styled.p`\n  ${tw`mb-8`};\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport Button from 'components/ui/Button';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle?: string;\n  content: React.ReactNode;\n  linkTo: string;\n  linkText: string;\n}\n\nconst Banner: React.FC<Props> = ({ title, subtitle, content, linkTo, linkText }) => (\n  <Styled.Banner>\n    <Container section>\n      <TitleSection title={title} subtitle={subtitle} />\n      <Styled.Content>{content}</Styled.Content>\n      <Link to={linkTo}>\n        <Button primary name=\"riccardo sirigu profile\">{linkText}</Button>\n      </Link>\n    </Container>\n  </Styled.Banner>\n);\n\nexport default Banner;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Banner from 'components/ui/Banner';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface SectionHeroBanner extends SectionTitle {\n  content: string;\n  linkTo: string;\n  linkText: string;\n}\n\nconst HeroBanner: React.FC = () => {\n  const { markdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"hero section\" } }) {\n        frontmatter {\n          title\n          subtitle\n          content\n          linkTo\n          linkText\n        }\n      }\n    }\n  `);\n\n  const heroBanner: SectionHeroBanner = markdownRemark.frontmatter;\n\n  return (\n    <Banner\n      title={heroBanner.title}\n      subtitle={heroBanner.subtitle}\n      content={heroBanner.content}\n      linkTo={heroBanner.linkTo}\n      linkText={heroBanner.linkText}\n    />\n  );\n};\n\nexport default HeroBanner;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Services = styled.div`\n  ${tw`flex flex-wrap -mx-3`};\n`;\n\nexport const ServiceItem = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport { IconProps } from 'components/ui/Icon';\n\nimport { SectionTitle } from 'helpers/definitions';\n\nimport * as Styled from './styles';\n\ninterface Service {\n  node: {\n    id: string;\n    frontmatter: {\n      title: string;\n      icon: IconProps;\n      description: string;\n    };\n  };\n}\n\nconst Services: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"services section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"services\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              description\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const services: Service[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Services>\n        {services.map((item) => {\n          const {\n            id,\n            frontmatter: { title, icon, description }\n          } = item.node;\n\n          return (\n            <Styled.ServiceItem key={id}>\n              <InfoBlock icon={icon} title={title} content={description} />\n            </Styled.ServiceItem>\n          );\n        })}\n      </Styled.Services>\n    </Container>\n  );\n};\n\nexport default Services;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport HeroBanner from 'components/HeroBanner';\nimport Services from 'components/Services';\nimport Testimonials from 'components/Testimonials';\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"About Me\" />\n      <HeroBanner />\n      <Services />\n      <hr />\n      {/* <Testimonials /> */}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"sourceRoot":""}