{"version":3,"file":"component---src-pages-index-tsx-b765bff0efd09fc0dccb.js","mappings":"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","sources":["webpack://gatsby-personal-website-starter/./src/components/ui/Icon/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/InfoBlock/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/InfoBlock/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/Button/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/Button/index.tsx","webpack://gatsby-personal-website-starter/./src/components/ui/Banner/styles.ts","webpack://gatsby-personal-website-starter/./src/components/ui/Banner/index.tsx","webpack://gatsby-personal-website-starter/./src/components/HeroBanner/index.tsx","webpack://gatsby-personal-website-starter/./src/components/Services/styles.ts","webpack://gatsby-personal-website-starter/./src/components/Services/index.tsx","webpack://gatsby-personal-website-starter/./src/pages/index.tsx"],"sourcesContent":["import React from 'react';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\n//import { fab } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faLaptopCode,\n  faBug,\n  faUserSecret,\n  faUniversity,\n  faMapMarkerAlt,\n  faPhone,\n  faPaperPlane\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faTwitter,\n  faLinkedin,\n  faGithub\n} from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon, FontAwesomeIconProps } from '@fortawesome/react-fontawesome';\n\n/* add any additional icon to the library */\nlibrary.add(faTwitter, faLinkedin, faGithub, faLaptopCode, faBug, faUserSecret, faUniversity, faMapMarkerAlt, faPhone, faPaperPlane);\n\nexport type IconProps = FontAwesomeIconProps['icon'];\n\nconst Icon: React.FC<FontAwesomeIconProps> = ({ ...props }) => {\n  if(props.icon.includes('brand')){\n    return <FontAwesomeIcon {...props} icon={['fab', props.icon.replace('brand-', '')]}/>\n  }\n  else {\n    return <FontAwesomeIcon {...props} />\n  }\n}\n\nexport default Icon;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport interface StyledProps {\n  center?: boolean;\n}\n\nexport const InfoBlock = styled.div<StyledProps>`\n  ${tw`flex flex-col my-4 mx-3 p-4 bg-white rounded-lg border border-gray-300`};\n  ${({ center }) => center && tw`items-center`};\n`;\n\nexport const Icon = styled.span`\n  ${tw`flex items-center justify-center w-10 h-10 text-indigo-500 border border-teal-400 rounded-full mb-2`};\n`;\n\nexport const Wrapper = styled.div<StyledProps>`\n  ${({ center }) => center && tw`text-center`};\n`;\n\nexport const Title = styled.h3`\n  ${tw`text-md mt-1 font-semibold`};\n`;\n\nexport const Content = styled.p`\n  ${tw`mt-1`};\n`;\n","import React from 'react';\n\nimport Icon, { IconProps } from 'components/ui/Icon';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  title: string;\n  content: React.ReactNode;\n  icon: IconProps;\n}\n\nconst InfoBlock: React.FC<Props> = ({ icon, title, content, center }) => (\n  <Styled.InfoBlock center={center}>\n    <Styled.Icon>\n      <Icon icon={icon} />\n    </Styled.Icon>\n    <Styled.Wrapper center={center}>\n      <Styled.Title>{title}</Styled.Title>\n      <Styled.Content>{content}</Styled.Content>\n    </Styled.Wrapper>\n  </Styled.InfoBlock>\n);\n\nexport default InfoBlock;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\nimport { motion } from 'framer-motion';\n\nexport interface StyledProps {\n  primary?: boolean;\n  block?: boolean;\n}\n\nexport const Button = motion(styled.button<StyledProps>`\n  outline: none !important;\n  ${tw`py-2 px-8 rounded-full border border-teal-300 text-indigo-900`};\n\n  ${({ primary }) => (primary ? tw`bg-teal-300` : tw`text-indigo-600`)};\n\n  ${({ block }) => block && tw`w-full`};\n`);\n","import React from 'react';\n\nimport * as Styled from './styles';\n\ninterface Props extends Styled.StyledProps {\n  children: React.ReactNode;\n}\n\nconst Button: React.FC<Props & React.ButtonHTMLAttributes<HTMLButtonElement>> = ({ primary, block, children, name }) => (\n  <Styled.Button aria-label={name} primary={primary} block={block} whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>\n    {children}\n  </Styled.Button>\n);\n\nexport default Button;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Banner = styled.section`\n  ${tw`bg-gray-100 border-b border-indigo-100 `};\n`;\n\nexport const Content = styled.p`\n  ${tw`mb-8`};\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\n\nimport Container from 'components/ui/Container';\nimport Button from 'components/ui/Button';\nimport TitleSection from 'components/ui/TitleSection';\n\nimport * as Styled from './styles';\n\ninterface Props {\n  title: string;\n  subtitle?: string;\n  content: React.ReactNode;\n  linkTo: string;\n  linkText: string;\n}\n\nconst Banner: React.FC<Props> = ({ title, subtitle, content, linkTo, linkText }) => (\n  <Styled.Banner>\n    <Container section>\n      <TitleSection title={title} subtitle={subtitle} />\n      <Styled.Content>{content}</Styled.Content>\n      <Link to={linkTo}>\n        <Button primary name=\"riccardo sirigu profile\">{linkText}</Button>\n      </Link>\n    </Container>\n  </Styled.Banner>\n);\n\nexport default Banner;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Banner from 'components/ui/Banner';\n\nimport { SectionTitle } from 'helpers/definitions';\n\ninterface SectionHeroBanner extends SectionTitle {\n  content: string;\n  linkTo: string;\n  linkText: string;\n}\n\nconst HeroBanner: React.FC = () => {\n  const { markdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"hero section\" } }) {\n        frontmatter {\n          title\n          subtitle\n          content\n          linkTo\n          linkText\n        }\n      }\n    }\n  `);\n\n  const heroBanner: SectionHeroBanner = markdownRemark.frontmatter;\n\n  return (\n    <Banner\n      title={heroBanner.title}\n      subtitle={heroBanner.subtitle}\n      content={heroBanner.content}\n      linkTo={heroBanner.linkTo}\n      linkText={heroBanner.linkText}\n    />\n  );\n};\n\nexport default HeroBanner;\n","import styled from 'styled-components';\nimport tw from 'tailwind.macro';\n\nexport const Services = styled.div`\n  ${tw`flex flex-wrap -mx-3`};\n`;\n\nexport const ServiceItem = styled.div`\n  ${tw`w-full sm:w-1/2`};\n`;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport InfoBlock from 'components/ui/InfoBlock';\nimport Container from 'components/ui/Container';\nimport TitleSection from 'components/ui/TitleSection';\nimport { IconProps } from 'components/ui/Icon';\n\nimport { SectionTitle } from 'helpers/definitions';\n\nimport * as Styled from './styles';\n\ninterface Service {\n  node: {\n    id: string;\n    frontmatter: {\n      title: string;\n      icon: IconProps;\n      description: string;\n    };\n  };\n}\n\nconst Services: React.FC = () => {\n  const { markdownRemark, allMarkdownRemark } = useStaticQuery(graphql`\n    query {\n      markdownRemark(frontmatter: { category: { eq: \"services section\" } }) {\n        frontmatter {\n          title\n          subtitle\n        }\n      }\n      allMarkdownRemark(filter: { frontmatter: { category: { eq: \"services\" } } }, sort: { fields: fileAbsolutePath }) {\n        edges {\n          node {\n            id\n            frontmatter {\n              title\n              icon\n              description\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const sectionTitle: SectionTitle = markdownRemark.frontmatter;\n  const services: Service[] = allMarkdownRemark.edges;\n\n  return (\n    <Container section>\n      <TitleSection title={sectionTitle.title} subtitle={sectionTitle.subtitle} center />\n      <Styled.Services>\n        {services.map((item) => {\n          const {\n            id,\n            frontmatter: { title, icon, description }\n          } = item.node;\n\n          return (\n            <Styled.ServiceItem key={id}>\n              <InfoBlock icon={icon} title={title} content={description} />\n            </Styled.ServiceItem>\n          );\n        })}\n      </Styled.Services>\n    </Container>\n  );\n};\n\nexport default Services;\n","import React from 'react';\n\nimport Layout from 'components/Layout';\nimport SEO from 'components/SEO';\nimport HeroBanner from 'components/HeroBanner';\nimport Services from 'components/Services';\nimport Testimonials from 'components/Testimonials';\n\nconst IndexPage: React.FC = () => {\n  return (\n    <Layout>\n      <SEO title=\"About Me\" />\n      <HeroBanner />\n      <Services />\n      <hr />\n      {/* <Testimonials /> */}\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["library","faTwitter","faLinkedin","faGithub","faLaptopCode","faBug","faUserSecret","faUniversity","faMapMarkerAlt","faPhone","faPaperPlane","_ref","props","icon","includes","React","FontAwesomeIcon","Object","assign","replace","InfoBlock","styled","displayName","componentId","center","Icon","Wrapper","_ref2","Title","Content","title","content","Styled","Button","motion","primary","block","children","name","whileHover","scale","whileTap","Banner","subtitle","linkTo","linkText","Container","section","TitleSection","Link","to","HeroBanner","markdownRemark","useStaticQuery","heroBanner","frontmatter","Services","ServiceItem","allMarkdownRemark","sectionTitle","services","edges","map","item","id","description","node","key","IndexPage","Layout","SEO"],"sourceRoot":""}